# set-option -g default-shell /usr/local/bin/bash
set-option -g default-shell /bin/zsh
run-shell "powerline-daemon -q"
POWERLINE_PACKAGE_DIR=/usr/local/lib/python3.7/site-packages
source "$POWERLINE_PACKAGE_DIR/powerline/bindings/tmux/powerline.conf"

set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/magenta'
set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'

#session save and restore
set -g  @resurrect-processes 'vim mvim "git log" "~MacVim.app"'
set -g  @resurrect-capture-pane-contents 'on'
set -g  default-command "reattach-to-user-namespace -l $SHELL"
set -g  default-terminal "xterm-256color"
set -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'
set -g  renumber-windows on
set -g  history-limit 5000

# Activity Monitoring
setw -g  monitor-activity off
set  -g  visual-activity off
setw -g  aggressive-resize on
set  -sg escape-time 0

# Status line
set  -g  status-left  "#[fg=colour232,bg=colour033] #S #(~/.yrl/git-status-bar #{pane_current_path})#[fg=colour209,bg=colour235]"
set  -ga status-left  "#[fg=colour240] #(~/.yrl/check-vim-in-background #{pane_pid}) #[fg=colour235,bg=colour233]"
set  -g  status-right "#[fg=colour235,bg=colour233]#[fg=colour240,bg=colour235] %H:%M:%S #[fg=colour233,bg=colour240] %d-%b-%y #(~/.yrl/battery-life)"
set  -g  status-left-length 249

# make window/pane index start with 1
set  -g  base-index 1
setw -g  pane-base-index 1
set  -g  window-style 'bg=colour236'
set  -g  window-active-style 'bg=terminal'

######################
#### Key Bindings ####
######################
bind C-s run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh
bind C-r run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh

# for nested tmux sessions
bind a send-prefix

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# split window and fix path for tmux 1.9
bind |  split-window -h -c "#{pane_current_path}"
bind -  split-window -v -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

unbind -n C-j
unbind -n C-k
bind j select-pane -D
bind k select-pane -U
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# enable mouse support
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe "pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
