# vim: set ft=zsh:
function fstrigger()
{
  local to_watch to_execute red green
  for arg in "$@"
  do
    if [[ -f $arg ]] || [[ -d $arg ]]; then
      to_watch+=($arg)
    else
      to_execute+=${arg}" "
    fi
  done
  bold='\033[1m'
  info='\033[36m'
  red='\033[31m'
  green='\033[32m'
  reset='\033[0m'
  echo "$bold$info憎${to_watch[@]}$reset"
  echo "$bold$green  ${to_execute[@]}$reset"
  while fswatch -e '*.swp' -1 -xnr ${to_watch[@]} >/dev/null 2>&1; do
    cols=$(tput cols)
    sleep 0.2
    color=$red
    eval "${to_execute[@]}" && color=$green
    printf "$reset$color"
    printf "%.0s" {2..$cols}
    printf "$reset"
  done
}

function sanitize()
{
  for fname in "${@}"
  do
    gcat -v ${fname} | sed 's/M-BM-//g' > ${fname}.bkp
    mv ${fname}.bkp ${fname}
  done
}

function check_op_session()
{
  source $HOME/.yrl_environment
  OP_SESSION_new=$(op signin my --session "$OP_SESSION_my" --output=raw)
  if [[ "$OP_SESSION_new" != "$OP_SESSION_my" ]]; then
    unset OP_SESSION_my
    export OP_SESSION_my=$OP_SESSION_new
    sed -i -e "s/export OP_SESSION_my=.*/export OP_SESSION_my=$OP_SESSION_new/g" $HOME/.yrl_environment
  fi
}

function mfa()
{
  check_op_session
  op get totp rkdtjsgg4raf3p4b2zlxvpskay | pbcopy
  echo "MFA copied, valid for $(expr 30 - $(date +%s) % 30)s"
}

function getgpgpass()
{
  check_op_session
  op get item "GPG Passphrase" | jq -r '.details.password' | pbcopy
}

function unset_dazn_aws_env()
{
  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_DEFAULT_REGION
  unset AWS_SESSION_TOKEN
  unset AWS_SECURITY_TOKEN
}

function dazn_aws_set_env()
{
  if [[ -z ${1} ]]; then
    acc=dazn-platform-dev
  else
    acc=${1}
  fi
  echo "Using ${acc}"
  dazn aws exec -p ${acc} -- echo ""
  eval "$(dazn aws exec -p ${acc} -- printenv | grep AWS_ | sed 's/^/export /g')"
}

function git_branch_cleanup()
{
  if [[ "${1}" == "-f" ]]; then
    git branch -va | grep gone | awk '{print $1}' | xargs git branch -D
  else
    git branch -va | grep gone
    if [[ `git branch -va | grep gone | wc -l` -gt 0 ]]; then
      local answer
      if [ -n "$ZSH_VERSION" ]; then
        read -q "answer?Delete all of these? "
      else
        read -p "Delete all of these? " answer
      fi
      echo -en "\n"
      case $answer in
        [Yy]* ) git branch -va | grep gone | awk '{print $1}' | xargs git branch -D;
      esac
    fi
  fi
}

function touchy()
{
  local files=$(echo ${@} | sed -e 's/^[+-=][rstwxXugo]* //g')
  local chmod_flags=$(echo ${@} | sed -e 's/^\([+-=][rstwxXugo]*\) .*/\1/g')
  # echo "Files $files"
  # echo "chmod_flags $chmod_flags"
  touch "${files}"
  if [[ -n "${chmod_flags}" ]]; then
    chmod "${chmod_flags}" "${files}"
  fi
}

function _print_script_with_sources()
{
  local script_to_read=$(eval "realpath ${1}" 2>/dev/null)
  local padding=${2}
  if ! [[ -f "${script_to_read}" ]]; then
    1>&2 echo -e "Usage:\n_print_script_with_sources path/to/script"
    return 1
  fi

  IFS=''
  cat "${script_to_read}" | while read linex; do
  if [[ "${linex}" = *"source "* ]]; then
    local sourced_file=$(echo -e "${linex}" | sed -e 's/[[:space:]]*$//' -e 's/^[[:space:]]*//' -e 's/^source[[:space:]]*\([^ *]\)/\1/g')
    sourced_file=$(eval "realpath ${sourced_file}" 2>/dev/null)
    if [[ -f "${sourced_file}" ]]; then
      echo -e "${padding}# ${linex}"
      _print_script_with_sources "${sourced_file}" "${padding}   "
      continue
    fi
  fi
  echo -e "${padding}${linex}"
done
}

function _bash_profile()
{
  _print_script_with_sources $HOME/.bash_profile
}

function help() {
  MANPAGER="nvim -c 'set ft=man' +':silent! /^ *$@ ' +':noh' -"
  run-help $@
}

function db_tunnel()
{
  if [[ -z ${1} ]]; then
    env=dev
  else
    env=${1}
  fi
  echo "Connecting to ${env}"
  if [[ "${env}" == "prod" ]]; then
    sshuttle -e 'ssh -J yogesh.lonkar@prod-eu-central-1-tunnel-service.daznplatform.com:443' -r yogesh.lonkar@mesh-bastion-service-euc1-prod.transit.indazn.com 0/0:5432 -vv
  else
    sshuttle -e 'ssh -J yogesh.lonkar@prod-eu-central-1-tunnel-service.daznplatform.com:443' -r yogesh.lonkar@mesh-bastion-service-euc1-${env}.transit.dazn-stage.com 0/0:5432 -vv
  fi
}

function icopy()
{
  if [[ -z "$i_custom_c" ]]; then
    source $HOME/git-repos/nerd-fonts/bin/scripts/lib/i_*
  fi
  echo -n $1 | pbcopy
}
